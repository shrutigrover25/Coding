#include<bits/stdc++.h>

using namespace std;

static int t[1002][1002];
    


int knapsack(int wt[], int val[], int W, int n)
{
    memset(t,-1 ,sizeof(t));
    
    
    if(n==0 || W==0)
       return 0;
       
    if(t[n][W]!=-1)
        return t[n][W];
        
    if(wt[n-1]<=W)
    {
        return t[n][W]=max(val[n-1]+knapsack(wt,val,W-wt[n-1],n-1),knapsack(wt,val,W,n-1));
    }
    
    else
    {
        return t[n][W]= knapsack(wt,val,W,n-1);
    }
}

int main()
{
    int val[] = { 60, 100, 120 };
    int wt[] = { 10, 20, 30 };
    int W = 50;
    int n = sizeof(val) / sizeof(val[0]);
      
    int ans=knapsack(wt,val,W,n);
    
    cout<<""<<ans;
    
    return 0;
}
